Resetting local database...
Recreating database...
Initialising schema...
Seeding globals from roles.sql...
Applying migration 0001_init.sql...
NOTICE (42710): extension "uuid-ossp" already exists, skipping
Applying migration 0002_add_monitoring.sql...
Applying migration 0003_add_cron_job.sql...
Applying migration 0004_add_scheduled_scan_logs.sql...
Applying migration 0005_add_scan_trends.sql...
Applying migration 0006_add_scan_trends_fk.sql...
Applying migration 0007_add_monitoring_enabled.sql...
Applying migration 0009_add_users_table.sql...
NOTICE (42710): extension "uuid-ossp" already exists, skipping
NOTICE (00000): table "users" does not exist, skipping
Applying migration 0010_add_github_id.sql...
Applying migration 0011_add_custom_domain.sql...
Applying migration 0012_update_users_rls.sql...
Applying migration 0013_add_team_billing.sql...
Applying migration 0014_add_ai_suggestions.sql...
ERROR: parameter name "scan_id" used more than once (SQLSTATE 42P13)
At statement: 5                                                     
-- Function to get suggestions for a scan                           
CREATE OR REPLACE FUNCTION get_scan_suggestions(scan_id UUID)       
RETURNS TABLE (                                                     
  id UUID,                                                          
  scan_id UUID,                                                     
  suggestions JSONB,                                                
  created_at TIMESTAMPTZ                                            
)                                                                   
LANGUAGE plpgsql                                                    
SECURITY DEFINER                                                    
AS $$                                                               
BEGIN                                                               
  -- Check if user has access and team is pro                       
  IF NOT can_access_ai_suggestions(scan_id) THEN                    
    RAISE EXCEPTION 'Access denied or pro subscription required';   
  END IF;                                                           
                                                                    
  RETURN QUERY                                                      
  SELECT s.id, s.scan_id, s.suggestions, s.created_at               
  FROM ai_suggestions s                                             
  WHERE s.scan_id = scan_id                                         
  ORDER BY s.created_at DESC                                        
  LIMIT 1;                                                          
END;                                                                
$$                                                                  
Try rerunning the command with --debug to troubleshoot the error.
